{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021/cv-update/",
    "result": {"pageContext":{"slug":"/2021/cv-update/","previous":{"html":"<blockquote>\n<p>TL;DR you can find code at <a href=\"https://github.com/sergeyt/multidisk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/sergeyt/multidisk</a></p>\n</blockquote>\n<p><img src=\"/f56659869707c538e193b3a6193d4da4/multidisk.gif\" alt=\"MultiDisk Demo\"></p>\n<p>I am going to show you how to relatively quickly build a small Google Drive app or kind of that. I know “Google Drive” may sound a bit provocative, but it is done just to raise some chunk of your attention 😄. Also believe me or not but I’ve done the app within few mornings (yep I am morning person 😄). Below is some details about what I’ve done and how.</p>\n<h2 id=\"high-level-idea\" style=\"position:relative;\"><a href=\"#high-level-idea\" aria-label=\"high level idea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High level idea</h2>\n<p>The idea is simple. I’d like to build a unified UI for all my drives. For sake of simplicity I selected only few platforms as a starting point:</p>\n<ul>\n<li><a href=\"https://uploadcare.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Uploadcare</a> - nice and quite new one with simple APIs and have free plan</li>\n<li><a href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dropbox</a> - I assume no need any introduction</li>\n</ul>\n<p>Lets call it MultiDisk, it is like <a href=\"https://www.odrive.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.odrive.com/</a>, but built for the Web using quite modern tech stack.</p>\n<h2 id=\"what-ive-done-so-far\" style=\"position:relative;\"><a href=\"#what-ive-done-so-far\" aria-label=\"what ive done so far permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What I’ve done so far</h2>\n<p>In terms of features the app includes the following capabilities:</p>\n<ul>\n<li>Allow managing multiple drives</li>\n<li>Uploading, downloading and deleting files</li>\n<li>At this point I’ve implemented drives for <em>Uploadcare</em> and <em>Dropbox</em>, but I’d like to add support for Google Drive, etc. Especially if the app gains some attention</li>\n</ul>\n<p>You can just briefly watch <a href=\"https://youtu.be/W4cYjoFQaXg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this short video</a> to have more vision about the features mentioned above.</p>\n<h2 id=\"tooling\" style=\"position:relative;\"><a href=\"#tooling\" aria-label=\"tooling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tooling</h2>\n<p>To build the app I’ve chosen the following tools:</p>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript</a> - I prefer having types from the start of any project nowadays. The reason for this could be discussed separately 😄. Maybe just because I started typed programming first</li>\n<li><a href=\"https://uploadcare.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Uploadcare</a> - new one for me, lets learn something new together</li>\n<li><a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Next.js</a> - no need any introduction as well</li>\n<li><a href=\"https://material-ui.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Material UI</a> - good React framework with plenty of components. Maybe later I’ll refactor the app to use <a href=\"https://chakra-ui.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chakra UI</a> since it looking promising to me too</li>\n</ul>\n<p>All tools are well known to me except Uploadcare and Dropbox APIs. Great, it is a learning opportunity then.</p>\n<h2 id=\"how-ive-done-this\" style=\"position:relative;\"><a href=\"#how-ive-done-this\" aria-label=\"how ive done this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How I’ve done this</h2>\n<p>My steps were:</p>\n<ul>\n<li>Project bootstrapping</li>\n<li>Drive abstraction</li>\n<li>Uploadcare Drive implementation</li>\n<li>Dropbox Drive implementation</li>\n<li>Few UI pages</li>\n</ul>\n<p>That is it. Lets dive in and cover each step with some additional text.</p>\n<h3 id=\"project-bootstrapping\" style=\"position:relative;\"><a href=\"#project-bootstrapping\" aria-label=\"project bootstrapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project bootstrapping</h3>\n<p>According to <a href=\"https://nextjs.org/docs/getting-started\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this Next.js doc</a> it is easy peasy as just running <code class=\"language-text\">npx create-next-app</code> command in your shell and you are literally done 😄</p>\n<h3 id=\"drive-interfaces\" style=\"position:relative;\"><a href=\"#drive-interfaces\" aria-label=\"drive interfaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Drive interfaces</h3>\n<p>It is time for pumping this post with some code 😄. I’ve come up with the following interfaces to abstract any drive and its objects. These abstractions are needed to unify different storage providers.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">ItemType</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"file\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> ItemType<span class=\"token punctuation\">;</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  driveId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">File</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n  size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  createdAt<span class=\"token operator\">:</span> Date<span class=\"token punctuation\">;</span>\n  url<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  download<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Drive</span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  provider<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>fileId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">deleteFolder</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"implementation-of-uploadcaredrive\" style=\"position:relative;\"><a href=\"#implementation-of-uploadcaredrive\" aria-label=\"implementation of uploadcaredrive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementation of UploadcareDrive</h3>\n<p>The API docs of Uploadcare can be found at <a href=\"https://uploadcare.com/api-refs/rest-api/v0.5.0/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://uploadcare.com/api-refs/rest-api/v0.5.0/</a>.</p>\n<p>We will just use <a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">axios</a> to make HTTP requests and I did not find any typed client for my needs. I happy to do a small NPM package for Uploadcare API client. I know about <a href=\"https://github.com/uploadcare/uploadcare-upload-client\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this one</a>, but currently it is more focussed on uploading and downloading files and it does not cover all features of Uploadcare API. Maybe just need to request it on github 😄</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Drive<span class=\"token punctuation\">,</span> File<span class=\"token punctuation\">,</span> Item <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> checkResponseOK <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Options</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  publicKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  secretKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UploadcareDrive</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Drive</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _options<span class=\"token operator\">:</span> Options<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> Options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Options <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">provider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        Accept<span class=\"token operator\">:</span> <span class=\"token string\">\"application/vnd.uploadcare-v0.5+json\"</span><span class=\"token punctuation\">,</span>\n        Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Uploadcare.Simple </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>publicKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>secretKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.uploadcare.com/files/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">checkResponseOK</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          type<span class=\"token operator\">:</span> <span class=\"token string\">\"file\"</span><span class=\"token punctuation\">,</span>\n          driveId<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>uuid<span class=\"token punctuation\">,</span>\n          name<span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>original_filename<span class=\"token punctuation\">,</span>\n          createdAt<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>datetime_uploaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          url<span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>original_file_url<span class=\"token punctuation\">,</span>\n          size<span class=\"token operator\">:</span> f<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> File<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>fileId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.uploadcare.com/files/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fileId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">checkResponseOK</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">deleteFolder</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"implementation-of-dropboxdrive\" style=\"position:relative;\"><a href=\"#implementation-of-dropboxdrive\" aria-label=\"implementation of dropboxdrive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementation of DropboxDrive</h3>\n<p>Dropbox has <a href=\"https://www.dropbox.com/developers/documentation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">a wonderful docs</a> with even <a href=\"https://dropbox.github.io/dropbox-api-v2-explorer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">interactive playground</a> called API explorer. I’ve implemented the version of <em>DropboxDrive</em> that used short-lived token without refreshing token capability. Sorry about that, maybe next time I’ll find a time to revise that.</p>\n<p>Here a code of current version:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> trimStart <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash/trimStart\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Drive<span class=\"token punctuation\">,</span> Item<span class=\"token punctuation\">,</span> File <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> checkResponseOK<span class=\"token punctuation\">,</span> downloadBlob<span class=\"token punctuation\">,</span> trimPrefix <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Options</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  accessToken<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DropboxDrive</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Drive</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _options<span class=\"token operator\">:</span> Options<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> Options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">provider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"dropbox\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>folderId<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      folderId <span class=\"token operator\">=</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> folderId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"https://api.dropboxapi.com/2/files/list_folder\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> folderId <span class=\"token operator\">===</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> folderId<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">checkResponseOK</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> resp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>entries<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">[</span><span class=\"token string\">\".tag\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token operator\">:</span> <span class=\"token string\">\"file\"</span><span class=\"token punctuation\">,</span>\n          id<span class=\"token operator\">:</span> <span class=\"token function\">trimPrefix</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"id:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          name<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n          path<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>path_display<span class=\"token punctuation\">,</span>\n          createdAt<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>server_modified<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          driveId<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n          size<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">download</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">\"https://content.dropboxapi.com/2/files/download\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">{</span>\n                headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token string-property property\">\"Dropbox-API-Arg\"</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                responseType<span class=\"token operator\">:</span> <span class=\"token string\">\"blob\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">downloadBlob</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> File<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"folder\"</span><span class=\"token punctuation\">,</span>\n        id<span class=\"token operator\">:</span> <span class=\"token function\">trimStart</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>path_display<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> entry<span class=\"token punctuation\">.</span>path_display<span class=\"token punctuation\">,</span>\n        driveId<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> Item<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>fileId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> resp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"https://api.dropboxapi.com/2/file_requests/delete\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        ids<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>fileId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">checkResponseOK</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">deleteFolder</span><span class=\"token punctuation\">(</span>folderId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>accessToken<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"application-ui\" style=\"position:relative;\"><a href=\"#application-ui\" aria-label=\"application ui permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application UI</h3>\n<p>MVP version of the app has only few pages and few dialogs:</p>\n<ul>\n<li>Home page with list of drives</li>\n<li>Drive detail page with list of files</li>\n<li>New drive dialog</li>\n<li>Confirmation dialog for delete actions</li>\n</ul>\n<h3 id=\"home-page\" style=\"position:relative;\"><a href=\"#home-page\" aria-label=\"home page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Home Page</h3>\n<p>We will use <a href=\"https://nextjs.org/docs/basic-features/data-fetching#swr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SWR</a> for data fetching recommended by Next.js folks. The home has straightforward implementation. Here a full script of the Home Page:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> isEmpty <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash/isEmpty\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useSWR <span class=\"token keyword\">from</span> <span class=\"token string\">\"swr\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getDrives <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../core/store\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Loader <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/Loader\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Placeholder <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/Placeholder\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> DriveList <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/DriveList\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> drives <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSWR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/drives\"</span><span class=\"token punctuation\">,</span> getDrives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>drives<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Loader <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>drives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Placeholder<span class=\"token operator\">></span>\n        You don't <span class=\"token builtin\">any</span> drives<span class=\"token punctuation\">,</span> but you can create one clicking on <span class=\"token constant\">ADD</span> <span class=\"token constant\">DRIVE</span>\n        button\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Placeholder<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>DriveList drives<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>drives<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Where <em>DriveList</em> component is coded as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/link\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ListItem <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/ListItem\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ListItemAvatar <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/ListItemAvatar\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Avatar <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Avatar\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SiDropbox <span class=\"token keyword\">as</span> DropboxIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-icons/si\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FiHardDrive <span class=\"token keyword\">as</span> DriveIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-icons/fi\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ListItemText <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/ListItemText\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ListItemSecondaryAction <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/ListItemSecondaryAction\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> List <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/List\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Drive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> DriveMenu <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DriveMenu\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DriveList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> drives <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> drives<span class=\"token operator\">:</span> Drive<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> drives<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/drive/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>d<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span> key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ListItem style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> cursor<span class=\"token operator\">:</span> <span class=\"token string\">\"pointer\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ListItemAvatar<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Avatar<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Icon type<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>d<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Avatar<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ListItemAvatar<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ListItemText primary<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>d<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> secondary<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>d<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ListItemSecondaryAction<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>DriveMenu driveId<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>d<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ListItemSecondaryAction<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ListItem<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Icon</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"dropbox\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>DropboxIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>DriveIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"drive-view-page\" style=\"position:relative;\"><a href=\"#drive-view-page\" aria-label=\"drive view page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Drive View page</h3>\n<p>Also it is simple as it is:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/router\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useSWR <span class=\"token keyword\">from</span> <span class=\"token string\">\"swr\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Box <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getDrive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../core/store\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Loader <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../components/Loader\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ItemList <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../components/ItemList\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Uploader <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../components/Uploader\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DriveView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> driveId<span class=\"token punctuation\">,</span> folder<span class=\"token operator\">:</span> folderId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> folderId\n    <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/drive/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>driveId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?folder=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>folderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/drive/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>driveId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSWR</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> drive <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getDrive</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>driveId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> drive<span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span>folderId <span class=\"token operator\">?</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>folderId<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> drive<span class=\"token punctuation\">,</span> items <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Loader <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Box m<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span> mb<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Uploader drive<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ItemList data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Where <em>Uploader</em> component is coded as:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> mutate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"swr\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Widget <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@uploadcare/react-widget\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Drive <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Uploader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> drive <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> drive<span class=\"token operator\">:</span> Drive <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>drive<span class=\"token punctuation\">.</span>provider <span class=\"token operator\">===</span> <span class=\"token string\">\"uploadcare\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>Upload a file<span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Widget\n          publicKey<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>drive<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>publicKey<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/drive/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>drive<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And <em>ItemList</em> component is implemented as:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> isEmpty <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash/isEmpty\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> List <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/List\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Item<span class=\"token punctuation\">,</span> File <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> FileItem <span class=\"token keyword\">from</span> <span class=\"token string\">\"./FileItem\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> FolderItem <span class=\"token keyword\">from</span> <span class=\"token string\">\"./FolderItem\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Placeholder <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Placeholder\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ItemList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Placeholder<span class=\"token operator\">></span>\n        This drive <span class=\"token keyword\">is</span> empty<span class=\"token punctuation\">,</span> but you can fill it out <span class=\"token keyword\">with</span> something <span class=\"token operator\">:</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Placeholder<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"file\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>FileItem key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span> item<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item <span class=\"token keyword\">as</span> File<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"folder\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>FolderItem key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span> item<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>item <span class=\"token keyword\">as</span> Item<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>List<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you might noticed uploading file is implemented just using <a href=\"https://uploadcare.com/docs/integrations/react/#react-file-uploader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Uploadcare</a> widget - another big time saver which is nice.</p>\n<h2 id=\"how-ive-done-dialogs\" style=\"position:relative;\"><a href=\"#how-ive-done-dialogs\" aria-label=\"how ive done dialogs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How I’ve done Dialogs?</h2>\n<p>Do you really wanna read the code for dialogs? It should be boring. And maybe it should be enough for this blog post 😄</p>\n<p>Anyway you can be gone to <a href=\"https://github.com/sergeyt/multidisk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the github repo</a> and have some fun consuming additional bits of information 😄</p>\n<h2 id=\"next-steps\" style=\"position:relative;\"><a href=\"#next-steps\" aria-label=\"next steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next Steps</h2>\n<p>Next time probably I’ll try adding more features in the application like:</p>\n<ul>\n<li>Google Drive</li>\n<li>AWS S3 Drive</li>\n<li>Framework-agnostic File Manager web component. Maybe using <a href=\"https://angular.io/guide/elements\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Angular elements</a></li>\n<li>Folders</li>\n<li>Just improving UX like making wizard to create a drive</li>\n<li>Better authorization, maybe making official Dropbox or Google apps</li>\n<li>Storing drive connections in Mongo Cloud to persist config across different devices (maybe paid feature 😄)</li>\n</ul>\n<p>Enjoy! EOF 😄</p>","timeToRead":9,"fields":{"slug":"/2021/multidisk/","langKey":"en","directoryName":"multidisk","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Lets build mini Google Drive clone quickly","date":"July 24, 2021","spoiler":"Yet another micro app from SergeyT's hands :)","tags":["webdev","react","javascript","tutorial"],"reddit":"https://www.reddit.com/r/learnreactjs/comments/oyoshz/lets_build_mini_google_drive_clone_quickly/"}},"next":{"html":"<p><strong>Sergey Todyshev</strong><br>\n<strong>Senior Software Engineer</strong> | <strong>AI-Powered Systems</strong> | <strong>Cloud Architecture</strong><br>\n<strong>Sochi, Russia</strong> (<strong>open to relocation</strong>)<br>\n<a href=\"mailto:stodyshev@gmail.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stodyshev@gmail.com</a> | <a href=\"https://www.linkedin.com/in/sergeytodyshev\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">linkedin.com/in/sergeytodyshev</a> | <a href=\"https://github.com/sergeyt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github/sergeyt</a>  </p>\n<h2 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<ul>\n<li>20+ years of full-stack engineering experience, specializing in AI applications, cloud-native systems (AWS), and high-performance data platforms.</li>\n<li>Architected and delivered core features for AI sales tools at <a href=\"https://regie.ai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Regie.ai</a>, directly contributing to a 40% increase in user adoption for the Co-pilot product.</li>\n<li>Led technical teams of up to 15 engineers, modernized legacy systems to cut build times by 60%, and solved critical scalability bottlenecks for enterprise clients.</li>\n<li>Expert in Node.js/TypeScript, Java/C#, React, Golang, and AWS with a record of shipping robust, cross-platform solutions.</li>\n<li>Skills: Node.js, TypeScript, React, Java, C#, NestJS, Golang, Rust, AWS, MongoDB, PostgreSQL, ElasticSearch, Docker, CI/CD, Microservices, System Architecture, Performance Optimization.</li>\n</ul>\n<h2 id=\"experience\" style=\"position:relative;\"><a href=\"#experience\" aria-label=\"experience permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Experience</h2>\n<h3 id=\"regieai---ai-native-sales-enablement-platform\" style=\"position:relative;\"><a href=\"#regieai---ai-native-sales-enablement-platform\" aria-label=\"regieai   ai native sales enablement platform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://regie.ai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">REGIE.AI</a> - AI-native Sales Enablement Platform</h3>\n<p><strong>Senior Software Engineer</strong> | Oct 2020 – present</p>\n<ul>\n<li>Architected Auto-pilot backend with NestJS + MongoDB, powering automated multi-step campaigns for 1,000+ enterprise users.</li>\n<li>Drove 40% adoption growth of Co-pilot by slashing API response times and streamlining React components.</li>\n<li>Consolidated three legacy endpoints into a single REST API, cutting server costs 15% through leaner AWS usage.</li>\n<li>Halved bug resolution times by rolling out standardized logging/monitoring with New Relic + Sentry.</li>\n<li>Team size: 10+ (distributed team)</li>\n<li>Tools: <strong>NodeJS</strong>, <strong>NestJS</strong>, <strong>TypeScript</strong>, <strong>React</strong>, <strong>Jest</strong>, <strong>Webpack</strong>, <strong>AWS</strong>, <strong>MongoDB</strong>, <strong>Metabase</strong></li>\n</ul>\n<h3 id=\"grapecity---javascript-data-presentation-platform\" style=\"position:relative;\"><a href=\"#grapecity---javascript-data-presentation-platform\" aria-label=\"grapecity   javascript data presentation platform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://grapecity.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GrapeCity</a> - JavaScript Data Presentation Platform</h3>\n<p><strong>Tech Lead</strong> | Oct 2018 - Oct 2020</p>\n<ul>\n<li>Led a distributed team of 7 engineers in the development of <a href=\"https://www.grapecity.com/dataviewsjs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>DataViewsJS</strong></a>, a JavaScript data presentation library used by Fortune 500 clients.</li>\n<li>Cut build times 60% and reduced pre-release bugs 40% by migrating from JavaScript to more modular TypeScript codebase and adding Jest &#x26; Playwright automated testing.</li>\n<li>Proved a 5x performance gain with Rust + WebAssembly prototype for spreadsheet calcs, influencing product roadmap.</li>\n<li>Tools: <strong>NodeJS</strong>, <strong>ExpressJS</strong>, <strong>TypeScript</strong>, <strong>React</strong>, <strong>Angular</strong>, <strong>VueJS</strong>, <strong>Jest</strong>, <strong>Webpack</strong></li>\n</ul>\n<h3 id=\"xored---lab-automation-platform\" style=\"position:relative;\"><a href=\"#xored---lab-automation-platform\" aria-label=\"xored   lab automation platform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://www.xored.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Xored</a> - Lab Automation Platform</h3>\n<p><strong>Tech Lead</strong> |  Jan 2016 - Jun 2018</p>\n<ul>\n<li>Led and mentored a team of 15 engineers developing <a href=\"/velocity\"><strong>Spirent Veclity</strong></a>, a lab automation platform for a major telecommunications client.</li>\n<li>Eliminated outages by re-architecting PostgreSQL transactions, hitting 99.9% uptime and preventing churn.</li>\n<li>Cut feature cycles from 8 to 4 weeks by automating CI/CD and creating a shared React component library.</li>\n<li>Team size: 20+ (distributed team)</li>\n<li>Tools: <strong>Java</strong>, <strong>PostgreSQL</strong>, <strong>ElasticSearch</strong>, <strong>WildFly</strong>, <strong>Apache Kafka</strong>, <strong>ReactJS</strong>, <strong>AngularJS</strong>, <strong>Python</strong>, <strong>Golang</strong></li>\n</ul>\n<h3 id=\"dataworks---reporting-solutions\" style=\"position:relative;\"><a href=\"#dataworks---reporting-solutions\" aria-label=\"dataworks   reporting solutions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://dataworks.co/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DataWorks</a> - Reporting Solutions</h3>\n<p><strong>Full-Stack Software Engineer</strong> |  Jun 2007 - Jan 2016</p>\n<ul>\n<li>Boosted legacy report rendering 10x by re-engineering the C# engine and optimizing layout and data processing subsystems.</li>\n<li>Authored <a href=\"https://github.com/GrapeCity/pagefx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PageFX compiler</a> compiler, an open-source .NET → Adobe Flash compiler, enabling cross-platform reporting.</li>\n<li>Team size: 20+ (distributed team)</li>\n<li>Tools: <strong>C#</strong>, <strong>.NET</strong>, <strong>WinForms</strong>, <strong>JavaScript</strong>, <strong>ReactJS</strong>, <strong>Knockout</strong>, <strong>jQuery</strong>, <strong>Microsoft SQL Reporting Services</strong></li>\n</ul>\n<h3 id=\"iae---research-lab\" style=\"position:relative;\"><a href=\"#iae---research-lab\" aria-label=\"iae   research lab permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.iae.nsk.su/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IAE</a> - Research Lab</h3>\n<p><strong>Software Engineer</strong> |  Jun 2002 - Aug 2007</p>\n<ul>\n<li>Developed C++ and C# software for automated Circle Laser Writing Systems (CLWS), including hardware abstraction layers and client-server architecture for system control.</li>\n<li>Tools: <strong>C++</strong>, <strong>Windows DDK</strong>, <strong>C#</strong>, <strong>WinForms</strong></li>\n</ul>\n<h2 id=\"education\" style=\"position:relative;\"><a href=\"#education\" aria-label=\"education permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Education</h2>\n<h3 id=\"novosibirsk-state-university\" style=\"position:relative;\"><a href=\"#novosibirsk-state-university\" aria-label=\"novosibirsk state university permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.nsu.ru/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Novosibirsk State University</a></h3>\n<p><strong>Master’s Degree</strong> | Sep 1999  –  Jun 2004</p>\n<ul>\n<li>Faculty: Information Technologies</li>\n<li>GPA: 4.0+</li>\n<li>Focus: Computers, Complexes, Systems, and Networks</li>\n</ul>\n<h3 id=\"institute-of-iae-novosibirsk\" style=\"position:relative;\"><a href=\"#institute-of-iae-novosibirsk\" aria-label=\"institute of iae novosibirsk permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Institute of IAE, Novosibirsk</h3>\n<p><strong>PhD Student</strong> | Jun 2004  – Aug 2007</p>\n<p>Accomplishments:</p>\n<ul>\n<li>Modernized software for Circle Laser Writing Systems (<a href=\"/clws\">CLWS</a>)</li>\n<li>Implemented hardware abstraction layers for CLWS</li>\n<li>Implemented client/server architecture and built desktop user interfaces using C++ MFC and C# WinForms</li>\n<li>Created tools for interferometry and tomography (<a href=\"/voxcat\">voxcat</a>)</li>\n</ul>","timeToRead":4,"fields":{"slug":"/resume/","langKey":"en","directoryName":"resume","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Resume","date":"December 16, 2024","spoiler":"Latest version of online CV","tags":["cv","pr"],"reddit":null}},"translations":[],"translatedLinks":[],"html":"<blockquote>\n<p>TL;DR you can CV page at <a href=\"/cv\">here</a></p>\n</blockquote>\n<p>I’ve updated the CV micro-app I mentioned sometime ago in <a href=\"/cv-micro-app\">this post</a>.\nThe major addition is support of <a href=\"https://codersrank.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CodersRank</a> profile as data source.</p>\n<p>Now you can specify src query parameter to take data from CodersRank. After that the page can fetch the data and render it. For example, <code class=\"language-text\">src=cr-sergeyt</code> will render the data for sergeyt username. You can see <a href=\"/cv?src=cr-sergeyt\">it in action</a>.</p>\n<p>Enjoy!\nEOF :)</p>","timeToRead":1,"title":"Small update of CV micro-app","date":"November 08, 2021","spoiler":"Now it supports CodersRank profile as data source","tags":["resume","cv","codersrank"],"reddit":null}},
    "staticQueryHashes": ["336482444"]}